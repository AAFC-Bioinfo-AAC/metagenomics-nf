manifest {
    description = 'Devin Holman and Arun Kommadath Metagenomic workflow (AAFC)'
}

conda_env = "/home/AAFC-AAC/brouardjs/mambaforge/envs"
conda.enabled = true

profiles {
    biocluster {
        params {
            genome             = "$baseDir/data/genomes/bowtie_genome_index/cow/"
            genome_basename    = "cow"      // e.g. cow in cow.1.bt2, cow.2.bt2, cow.rev.1.bt2, cow.rev.2.bt2
            pseudobins         = "$baseDir/data/pseudo_bins/*.fa"
            reads              = "$baseDir/data/reads/*_R{1,2}.fastq.gz"
            aln                = "$baseDir/data/aln/*.bam"
            results            = "$baseDir/my_results"
            kaiju_db           = '/isilon/common/reference/databases/kaiju_db/kaiju_db_nr_euk_20230223'
            kaiju_merge_script = "$baseDir/src/merge_tax_files.R"
            chocophlan_db      = "$baseDir/data/humann3/chocophlan"
            uniref_db          = "$baseDir/data/uniref"
            metaphlan_db       = "$baseDir/data/humann3/metaphlan_vJan21"
            checkm2_db         = "$baseDir/data/CheckM2_database/uniref100.KO.1.dmnd"
            gtdb_db            = '/isilon/common/reference/databases/gtdb/release207_v2'
            kraken2            = '/isilon/common/reference/databases/kraken2_ncbi_nt/kraken2_ncbi_nt_20230309'
            map_file           = "$baseDir/metadata/map_file.tsv"
            gene_ko_link_loc   =  '/isilon/common/reference/databases/ftp.kegg.net/kegg/genes/links/genes_ko.list.gz'
            kegg_loc           =  '/isilon/common/reference/databases/ftp.kegg.net/kegg/genes/fasta/prokaryotes.pep.gz'
            viral_loc          =  '/isilon/sherbrooke-rdc/users/brouardjs/db/viral.1.protein.faa.gz'
            dram_config        =  "$baseDir/metadata/config.json"
            
        }  
	    process {
            executor = 'sge'
            cpus = 2
            memory = 64.GB
            penv = 'smp'
            //errorStrategy = 'retry'
            //maxRetries = 3

            withLabel: mem_medium { memory = 128.GB }
            withLabel: mem_large { memory = 256.GB }
            withLabel: mem_xlarge { memory = 512.GB }
            withLabel: mem_xxlarge { memory = 1512.GB }
            
            withLabel: cpus_small { cpus = 2 }
            withLabel: cpus_medium { cpus = 4 }
            withLabel: cpus_large { cpus = 6 }
            withLabel: cpus_xlarge { cpus = 12 }
            withLabel: cpus_xxlarge { cpus = 20 }
            
            withName: QUALITY_FILTERING {conda = "$conda_env/fastp"}
            withName: BOWTIE2 {conda = "$conda_env/bowtie2"}
	        withLabel: samtools {conda = "$conda_env/samtools"}
            withName: OUTPUT_UNALIGNED_READS {conda = "$conda_env/bedtools"}
            withName: 'KAIJU|KAIJU_TAX_TABLE|KAIJU_FULL_TAX_TABLE' {conda = "$conda_env/kaiju"}
            withName: MERGE_TAX_FILES {conda = "$conda_env/R"}
            withName: 'HUMANN.*' { conda = "$conda_env/biobakery3"}
            withLabel: megahit {conda = "$conda_env/megahit"} 
            withLabel: metabat2 {conda = "$conda_env/metabat2"}
            withLabel: checkm {conda = "$conda_env/checkm2"}
            withName: DREP {conda = "$conda_env/drep2"}
            withName: QUAST {conda = "$conda_env/quast"}
            withName: GTDB_TK {conda = "$conda_env/gtdbtk-2.1.1"}
            withName: PHYLOPHLAN {conda = "$conda_env/phylophlan"}
            withName: COVERM {conda = "$conda_env/coverm"}
            withName: 'KRAKEN2|COMBINE_KRAKEN2|BRACKEN' {conda = "$conda_env/kraken2"}
            withName: 'DRAM.*' {conda = "$conda_env/DRAM_2023"}
        }
    }
}
