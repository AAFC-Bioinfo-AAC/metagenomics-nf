manifest {
    description = 'Devin Holman and Arun Kommadath Metagenomic workflow (AAFC).'
}

conda.enabled = true

profiles {
    biocluster {
        conda_env = "/isilon/common/conda/brouardjs"    // shared env on the Biocluster
        // scope executor
        executor {
            name = 'sge'
            perJobMemLimit = true
        }

        //scope params
        params {
            results            = "$baseDir/my_results"
            genome             = "$baseDir/data/genomes/bowtie_genome_index/cow/"
            genome_basename    = "cow"      // e.g. cow in cow.1.bt2, cow.2.bt2, cow.rev.1.bt2, cow.rev.2.bt2
            reads              = "$baseDir/data/reads/*_R{1,2}.fastq.gz"
            map_file           = "$baseDir/metadata/map_file.tsv"
            dram_config        = "$baseDir/metadata/config.json"
            chocophlan_db      = '/isilon/common/reference/databases/HUMAnN_db/HUMAnN_db_20230619/chocophlan'
            uniref_db          = '/isilon/common/reference/databases/HUMAnN_db/HUMAnN_db_20230619/uniref'
            metaphlan_db       = '/isilon/common/reference/databases/HUMAnN_db/HUMAnN_db_20230619/metaphlan_vJan21'
            checkm2_db         = '/isilon/common/reference/databases/CheckM2_database/uniref100.KO.1.dmnd'
            gtdb_db            = '/isilon/common/reference/databases/gtdb/release207_v2'
            kraken2            = '/isilon/common/reference/databases/kraken2_indexes/kraken2_nt_20230506'
            kaiju_db           = '/isilon/common/reference/databases/kaiju_db/kaiju_db_nr_euk_20230223'
        }  
	    
        // scope process
        process {
            cpus = 2
            memory = 64.GB
            penv = 'smp'
            //errorStrategy = 'retry'
            //maxRetries = 3

            withLabel: mem_medium { memory = 128.GB }
            withLabel: mem_large { memory = 256.GB }
            withLabel: mem_xlarge { memory = 512.GB }
            withLabel: mem_xxlarge { memory = 1512.GB }
            
            withLabel: cpus_small { cpus = 2 }
            withLabel: cpus_medium { cpus = 4 }
            withLabel: cpus_large { cpus = 6 }
            withLabel: cpus_xlarge { cpus = 12 }
            withLabel: cpus_xxlarge { cpus = 20 }
            
            withName: QUALITY_FILTERING {conda = "$conda_env/fastp"}
            withName: BOWTIE2 {conda = "$conda_env/bowtie2"}
	        withName: 'SORTSAM|SORTSAM_SINGLE' {conda = "$conda_env/samtools"}
            withName: OUTPUT_UNALIGNED_READS {conda = "$conda_env/bedtools"}
            withName: 'KAIJU|KAIJU_TAX_TABLE|KAIJU_FULL_TAX_TABLE' {conda = "$conda_env/kaiju"}
            withName: MERGE_TAX_FILES {conda = "$conda_env/R"}
            withName: 'HUMANN.*' { conda = "$conda_env/biobakery3"}
            withName: 'MEGAHIT_SINGLE|COASSEMBLY' {conda = "$conda_env/megahit"}
            withName: 'JGI_SUMMARIZE_SINGLE|METABAT2_BIN_SINGLE|JGI_SUMMARIZE|METABAT2_BIN_COASSEMBLY' {conda = "$conda_env/metabat2"}
            withName: 'CHECKM|CHECKM_SINGLE' {conda = "$conda_env/checkm2"}
            withName: DREP {conda = "$conda_env/drep2"}
            withName: QUAST {conda = "$conda_env/quast"}
            withName: GTDB_TK {conda = "$conda_env/gtdbtk-2.1.1"}
            withName: PHYLOPHLAN {conda = "$conda_env/phylophlan"}
            withName: COVERM {conda = "$conda_env/coverm"}
            withName: 'KRAKEN2|KRAKEN2_MPA|COMBINE_KRAKEN2|BRACKEN|BRACKEN_ALT' {conda = "$conda_env/kraken2"}
            withName: DRAM_ANNOTATION {conda = "$conda_env/DRAM_2023"
                                clusterOptions = "-cwd -V -S /bin/bash"
                                clusterOptions = "-l h=biocomp-2-6"
                                memory = '256 GB'
                                cpus = 20}
            withName: DRAM_DISTILLATION {conda = "$conda_env/DRAM_2023"}
        }
    }

    waffles {
        conda_env = "/home/CSCScience.ca/jsbrouard/.conda/envs/"
        // scope executor
        executor {
            name = 'slurm'
            perJobMemLimit = true
        }

        //scope params
        params {
            results            = "$baseDir/my_results"
            genome             = "$baseDir/data/genomes/bowtie_genome_index/cow/"
            genome_basename    = "cow"      // e.g. cow in cow.1.bt2, cow.2.bt2, cow.rev.1.bt2, cow.rev.2.bt2
            reads              = "$baseDir/data/reads/*_R{1,2}.fastq.gz"
            map_file           = "$baseDir/metadata/map_file.tsv"
            dram_config        = "$baseDir/metadata/config.json"
            chocophlan_db      = '/Drives/K/jsbrouard/AAFC-AAC/db/HUMAnN_db/HUMAnN_db_20230710/chocophlan'
            uniref_db          = '/Drives/K/jsbrouard/AAFC-AAC/db/HUMAnN_db/HUMAnN_db_20230710/uniref'
            
            metaphlan_db       = '/isilon/common/reference/databases/HUMAnN_db/HUMAnN_db_20230619/metaphlan_vJan21'
            checkm2_db         = '/isilon/common/reference/databases/CheckM2_database/uniref100.KO.1.dmnd'
            gtdb_db            = '/Drives/K/jsbrouard/AAFC-AAC/db/gtdb/release214'
            kraken2            = '/Drives/K/jsbrouard/AAFC-AAC/db/kraken2/nt'
            kaiju_db           = '/isilon/common/reference/databases/kaiju_db/kaiju_db_nr_euk_20230223'
        }  
	    
        // scope process
        process {
            cpus = 2
            memory = 64.GB
            penv = 'smp'
            //errorStrategy = 'retry'
            //maxRetries = 3

            withLabel: mem_medium { memory = 128.GB }
            withLabel: mem_large { memory = 256.GB }
            withLabel: mem_xlarge { memory = 512.GB }
            withLabel: mem_xxlarge { memory = 1512.GB }
            withLabel: cpus_small { cpus = 2 }
            withLabel: cpus_medium { cpus = 4 }
            withLabel: cpus_large { cpus = 6 }
            withLabel: cpus_xlarge { cpus = 12 }
            withLabel: cpus_xxlarge { cpus = 20 }
            withName: QUALITY_FILTERING {conda = "$conda_env/fastp-0.23.4"}
            withName: OUTPUT_UNALIGNED_READS {conda = "$conda_env/bedtools"}
            withName: BOWTIE2 {conda = "$conda_env/bowtie2"}
	        withName: 'SORTSAM|SORTSAM_SINGLE' {conda = "$conda_env/samtools-1.17"}
            withName: 'KAIJU|KAIJU_TAX_TABLE|KAIJU_FULL_TAX_TABLE' {conda = "$conda_env/kaiju"}
            withName: MERGE_TAX_FILES {conda = "$conda_env/R"}
            withName: 'HUMANN.*' { conda = "$conda_env/biobakery3"}
            withName: 'MEGAHIT_SINGLE|COASSEMBLY' {conda = "$conda_env/megahit"}
            withName: 'JGI_SUMMARIZE_SINGLE|METABAT2_BIN_SINGLE|JGI_SUMMARIZE|METABAT2_BIN_COASSEMBLY' {conda = "$conda_env/metabat2-2.15"}
            withName: 'CHECKM|CHECKM_SINGLE' {conda = "$conda_env/checkm2"}
            withName: DREP {conda = "$conda_env/drep"}
            withName: QUAST {conda = "$conda_env/quast-5.2.0"}
            withName: GTDB_TK {conda = "$conda_env/gtdbtk-2.1.1"}
            withName: PHYLOPHLAN {conda = "$conda_env/phylophlan"}
            withName: COVERM {conda = "$conda_env/coverm"}
            withName: 'KRAKEN2|KRAKEN2_MPA|COMBINE_KRAKEN2|BRACKEN|BRACKEN_ALT' {conda = "$conda_env/kraken2"}
            withName: 'DRAM.*' {conda = "$conda_env/DRAM_2023"
                                memory = '256 GB'
                                cpus = 20
            }
        }
    }
}
